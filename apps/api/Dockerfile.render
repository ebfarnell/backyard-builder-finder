# Render-optimized Dockerfile for FastAPI backend
FROM python:3.11-slim

# Set environment variables
ENV PYTHONUNBUFFERED=1 \
    PYTHONDONTWRITEBYTECODE=1 \
    PYTHONPATH=/app/apps/api \
    PORT=10000

# Install system dependencies
RUN apt-get update && apt-get install -y \
    gcc \
    g++ \
    gdal-bin \
    libgdal-dev \
    libproj-dev \
    libgeos-dev \
    postgresql-client \
    curl \
    && rm -rf /var/lib/apt/lists/*

# Set GDAL environment variables
ENV GDAL_LIBRARY_PATH=/usr/lib/x86_64-linux-gnu/libgdal.so
ENV GEOS_LIBRARY_PATH=/usr/lib/x86_64-linux-gnu/libgeos_c.so

# Create app directory
WORKDIR /app

# Copy requirements first for better caching
COPY apps/api/requirements.txt /app/apps/api/requirements.txt

# Install Python dependencies
RUN pip install --no-cache-dir -r /app/apps/api/requirements.txt

# Copy application code
COPY apps/api /app/apps/api
COPY packages /app/packages

# Copy production environment file
COPY apps/api/.env.production /app/apps/api/.env

# Create non-root user
RUN groupadd -r appuser && useradd -r -g appuser appuser
RUN chown -R appuser:appuser /app
USER appuser

# Health check
HEALTHCHECK --interval=30s --timeout=30s --start-period=60s --retries=3 \
    CMD curl -f http://localhost:${PORT}/health || exit 1

# Expose port
EXPOSE ${PORT}

# Start command
CMD cd /app/apps/api && uvicorn main:app --host 0.0.0.0 --port ${PORT} --workers 1